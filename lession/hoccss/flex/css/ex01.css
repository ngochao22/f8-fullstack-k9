/* 
***** Flex = Flexible Box Module 
- Kỹ thuật xây dựng các Layout(bố cục) 1 cách linh hoạt
- Flex có 2 thành phần 
    + Flex container (Thẻ bọc)
    + Flex Item (Thẻ con)
- Trục trong Flex
    + Main: Trục chính (Mặc định nằm ngang)
    + Cross: Vuông góc với trục chính
==> Có thể thay đổi hướng của trục main

1. Nhóm thuộc tính flex container 
- display: flex --> kích hoạt flexbox
- flex-direction: Chọn hướng cho thuộc tính
    + row
    + row-reverse
    + column
    + column-reverse
- justify-content: Căn chỉnh các item theo hướng song song với trục chính
    + flex-start
    + flex-end
    + center
    + space-between
    + space-around
    + space-evenly
    + start
    + end
- align-items: Căn chỉnh các item theo hướng song song với trục cross
    + stretch
    + flex-start
    + center
    + flex-end
    + baseline
- flex-wrap: wrap các item khi kích thước > container
    + nowrap
    + wrap
    + wrap-reverse
- align-content: Căn chỉnh các hàng hoặc cột(chỉ áp dụng khi có nhiều hàng hoặc nhiều cột)
    + stretch
    + flex-start
    + center
    + flex-end
    + space-around
    + space-evenly
- gap: Thay đổi khoảng cách GIỮA các item
- row-gap: 
- column-gap:

2. Nhóm thuộc tính flex item
- flex-grow: number --> Lấp đầy các item để bù vào vị trí còn trống của container theo tỷ lệ nhất định
- flex-shrink: number --> Thiết lập tỉ lệ tự động co lại của flex item khi tổng kích thước > container
- flex-basis: value + unit --> Thiết lập kích thước ban đầu cho flex item
- flex: grow shrink basis
- align-self: căn chỉnh 1 item theo hướng song song với trục cross
    + stretch
    + flex-start
    + center
    + flex-end
    + baseline
**** Lưu ý :
    + flex-basis sẽ bị chặn bởi max-width, min-width và max-height, min-height
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
.box {
    width: 400px;
    height: 400px;
    border: 1px solid red;
    margin: 30px auto;
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: stretch;
    /* flex-wrap: wrap; */
    align-content: stretch;
    /* gap: 10px 20px; */
    /* row-gap: 10px;
    column-gap: 20px; */
}

.item {
    background: green;
    color: #fff;
    padding: 15px;
    border: 1px solid #fff;
    /* flex-grow: 1; */
    /* flex-shrink: 1; */
    /* flex-basis: 100px; */
    flex: 0 1 100px;
}

.item:nth-child(3) {
    display: flex;
    justify-content: center;
    align-items: center;
}
